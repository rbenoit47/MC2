head	4.9;
access;
symbols;
locks; strict;
comment	@# @;


4.9
date	2003.06.09.13.08.55;	author armnmod;	state Exp;
branches;
next	;


desc
@@


4.9
log
@mc2_4.9
@
text
@copyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
***s/r brook_3d
*
      subroutine brook_3d
      implicit none
*
**
#include "nesting.cdk"
#include "dynmem.cdk"
#include "tracers.cdk"
#include "nestpnt.cdk"
#include "yomdyn.cdk"
#include "yomdyn1.cdk"
#include "consdyn_8.cdk"
#include "levels.cdk"
#include "partopo.cdk"
#include "brook.cdk"
*    
      integer i,j,k,n,gnix,gnjy,dim,kc
      real up1(gni+2*hx,gnj+2*hy,gnk),s,d
      pointer (pas1 ,s(*)), (pad1 ,d(*))
*
*
      gnix = gni+2*hx
      gnjy = gnj+2*hy
*
      if (myproc.eq.0) then
*
         print*, 'EXTERNAL FROUDE NUMBER = U0/sqrt(G*D0) = ',
     $                    brook_flo/sqrt(grav_8*htop)
*
      endif
*
* Initialize all fields to zero except wind along X-axis
*
      do k=1,gnk
         if(k.eq.1) then
            do j=1-hy,ldnj+hy
            do i=1-hx,ldni+hx
               qpp(i,j,0) = 0.
            end do
            end do
         endif
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
             up(i,j,k) = brook_flo
             vp(i,j,k) = 0.
            hmp(i,j,k) = 0.
            swp(i,j,k) = 0.
            tpp(i,j,k) = 0.
            qpp(i,j,k) = 0.
         end do
         end do
      end do
*
      if ((glconta).and.(iconta.ne.0)) then
         do k=1,gnk
            do j=1-hy,ldnj+hy
            do i=1-hx,ldni+hx
               clp(i,j,k,iconta)     = 0.
               clnestt(i,j,k,iconta) = 1.
            end do
            end do
         end do
         call nesajr 
     $            (clp(1-hx,1-hy,1,iconta),clnestt(1-hx,1-hy,1,iconta),
     $                    minx,maxx,miny,maxy,gnk,1,1,hblen_x,hblen_y)
      endif

c---- A Buble is introduced as a tracer
      if (myproc.eq.0) then  
         kc=0
         do k=1,gnk-1
            if (zm(k).lt.blb_zp) kc=k
         enddo
         print *,"kc=",kc," : ",zm(kc)
         do k=1,gnk
         do j=1,gnjy
         do i=1,gnix
c           up1(i,j,k)=100./(1.+
c    $           (real(k-kc)/real(blb_zs))**4.+
c    $           (real(i-gnix/4)/real(blb_xs))**4.)
c            up1(i,j,k)= min(5,max(5-abs(i-gnix/4),0))
             up1(i,j,k)= 1.
         end do
         end do
         end do
      endif
      call glbdist2 (up1,clp ,minx,maxx,miny,maxy,gni+hx,gnj+hy,gnk)
c---- 
*
      if (ctebcs) then
         do k=1,gnk
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
             unesta(i,j,k) =  up(i,j,k)
             vnesta(i,j,k) =  vp(i,j,k)
            swnesta(i,j,k) = swp(i,j,k)
            tpnesta(i,j,k) = tpp(i,j,k)
            qpnesta(i,j,k) = qpp(i,j,k)
            hmnesta(i,j,k) = hmp(i,j,k)
         end do
         end do
         do n=1,ntr
            do j=1-hy,ldnj+hy
            do i=1-hx,ldni+hx
               clnesta(i,j,k,n) = clp(i,j,k,n)
            end do
            end do
         end do
         end do
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
            qpnesta(i,j,0) = qpp(i,j,0)
         end do
         end do
      endif
*
      dim = ndynvar*dim3d+dim2d
      pas1 = paqpp
      pad1 = paqp0
      do i=1,dim
         d(i) = s(i)
      end do
*     
      do k=1,gnk
         do j=1-hy,ldnj+hy
            do i=1-hx,ldni+hx
               unestt(i,j,k) =  up(i,j,k)
               vnestt(i,j,k) =  vp(i,j,k)
               swnestt(i,j,k) = swp(i,j,k)
               tpnestt(i,j,k) = tpp(i,j,k)
               qpnestt(i,j,k) = qpp(i,j,k)
               hmnestt(i,j,k) = hmp(i,j,k)
            end do
         end do
      end do
      do n = 1, ntr
         do k=1,gnk
            do j=1-hy,ldnj+hy
               do i=1-hx,ldni+hx
                  clnestt(i,j,k,n) = clp(i,j,k,n)
               end do
            end do
         end do
      end do
      do j=1-hy,ldnj+hy
      do i=1-hx,ldni+hx
         qpnestt(i,j,0) = qpp(i,j,0)
      end do
      end do
*     
      if (myproc.eq.0) then
         write (6,602)
      endif
*
 602  format (/'INITIALIZATION OF BROOK PROBLEM COMPLETED')
*---------------------------------------------------------------------
      return
      end




@
