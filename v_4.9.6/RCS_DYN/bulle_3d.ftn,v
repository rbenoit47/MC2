head	4.9;
access;
symbols;
locks; strict;
comment	@# @;


4.9
date	2003.06.09.13.08.55;	author armnmod;	state Exp;
branches;
next	;


desc
@@


4.9
log
@mc2_4.9
@
text
@copyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
***s/r bulle_3d
*
      subroutine bulle_3d
      implicit none
*
**
#include "nesting.cdk"
#include "dynmem.cdk"
#include "tracers.cdk"
#include "nestpnt.cdk"
#include "yomdyn.cdk"
#include "yomdyn1.cdk"
#include "consdyn_8.cdk"
#include "levels.cdk"
#include "partopo.cdk"
#include "bubble.cdk"
#include "topo.cdk"
#include "h_geop.cdk"
*    
      integer i,j,k,n,gnix,gnjy,dim,err
      real hhm(minx:maxx,miny:maxy,0:gnk),
     $     hht(minx:maxx,miny:maxy,  gnk)
      real tp1,th1,s,d,gots1
      pointer (patp1, tp1(gni+2*hx,gnj+2*hy,gnk)),
     $        (path1, th1(gni+2*hx,gnj+2*hy,gnk)),
     $        (pas ,s(*)), (pad ,d(*))
      real*8 p00,t00,dtt,hm1,r,rx,rz,one,c00,pistr,hhh
      parameter(one=1.d0)
*
*
      gnix = gni+2*hx
      gnjy = gnj+2*hy
      if (myproc.eq.0) then
         call hpalloc (patp1, gnix*gnjy*gnk     , err, 1)
         call hpalloc (path1, gnix*gnjy*gnk     , err, 1)
      endif
*
      p00=100000.d0
      t00=303.16
      c00=grav_8/(cpd_8*t00)
*      
      if (myproc.eq.0) then   
      do k=1,gnk
         do j=1,gnjy
         do i=1,gnix         
         dtt = 0.
         r=sqrt ((float(i)-bb_xcntr)**2.+(float(k)-bb_zcntr)**2.)
         if(r.le.bb_radius) dtt = bb_dpth
ccccc square bubble cccccccccccccccccccccccc
c        rx=abs(float(i)-bb_xcntr)
c        rz=abs(float(k)-bb_zcntr)
c        if(rx.le.bb_radius.and.rz.le.bb_radius) dtt = bb_dpth
ccccc square bubble cccccccccccccccccccccccc
         tp1 (i,j,k)= dtt
         th1 (i,j,k)= dtt
         end do
         end do
      end do
      endif

      call glbdist2 (tp1,tpp  ,minx,maxx,miny,maxy,gni+hx,gnj+hy,gnk)
      call glbdist2 (th1,clp(1-hx,1-hy,1,1) ,minx,maxx,miny,maxy,
     $                                         gni+hx,gnj+hy,gnk)
*
      do j=1-hy,ldnj+hy
      do i=1-hx,ldni+hx
         hhm(i,j,0)=hh0i(i,j,1)
         qpp(i,j,0)=dlog(p00)
      end do
      end do
*
      do k=1,gnk
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
            hht(i,j,k)=h_geop(ztr(k),i,j)
            hhh = hht(i,j,k)
            pistr=one-c00*hhh
            tpp(i,j,k)=t00*pistr+tpp(i,j,k)
            hhm(i,j,k)=h_geop(zm(k),i,j)
            hhh = hhm(i,j,k)
            pistr=one-c00*hhh
            qpp(i,j,k)=dlog(p00)+cpd_8/rgasd_8*dlog(pistr)
         end do
         end do
      end do
*
      call qntstar(qstr,nssq,gots,orts,hht,hhm,
     $                 (maxx-minx+1)*(maxy-miny+1),0,gnk)
*
      do j=1-hy,ldnj+hy
      do i=1-hx,ldni+hx
         qpp(i,j,0) = (qpp(i,j,0) - qstr(i,j,0))/orts(i,j,0)
      end do
      end do
*
      do k=1,gnk
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
            gots1=grav_8/tpp(i,j,k)
            qpp(i,j,k) = (qpp(i,j,k) - qstr(i,j,k))/orts(i,j,k)
            tpp(i,j,k) = gots(i,j,k)*(grav_8/gots1-grav_8/gots(i,j,k))
         end do
         end do
      end do
*      
* Initialize moisture and velocities to zero
*
      do k=1,gnk
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
             up(i,j,k) = 0.
             vp(i,j,k) = 0.
            hmp(i,j,k) = 0.
            swp(i,j,k) = 0.
         end do
         end do
      end do
*
      if ((glconta).and.(iconta.ne.0)) then
         do k=1,gnk
            do j=1-hy,ldnj+hy
            do i=1-hx,ldni+hx
               clp(i,j,k,iconta)     = 0.
               clnestt(i,j,k,iconta) = 1.
            end do
            end do
         end do
         call nesajr 
     $            (clp(1-hx,1-hy,1,iconta),clnestt(1-hx,1-hy,1,iconta),
     $                    minx,maxx,miny,maxy,gnk,1,1,hblen_x,hblen_y)
      endif
*
      if (ctebcs) then
         do k=1,gnk
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
            qpnesta(i,j,k) = qpp(i,j,k)
             unesta(i,j,k) =  up(i,j,k)
             vnesta(i,j,k) =  vp(i,j,k)
            swnesta(i,j,k) = swp(i,j,k)
            tpnesta(i,j,k) = tpp(i,j,k)
            hmnesta(i,j,k) = hmp(i,j,k)
         end do
         end do
         do n=1,ntr
            do j=1-hy,ldnj+hy
            do i=1-hx,ldni+hx
               clnesta(i,j,k,n) = clp(i,j,k,n)
            end do
            end do
         end do
         end do
         do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
            qpnesta(i,j,0) = qpp(i,j,0)
         end do
         end do
      endif
*
      dim = ndynvar*dim3d+dim2d
      pas = paqpp
      pad = paqp0
      do i=1,dim
         d(i) = s(i)
      end do
*     
      do k=1,gnk
         do j=1-hy,ldnj+hy
            do i=1-hx,ldni+hx
               qpnestt(i,j,k) = qpp(i,j,k)
                unestt(i,j,k) =  up(i,j,k)
                vnestt(i,j,k) =  vp(i,j,k)
               swnestt(i,j,k) = swp(i,j,k)
               tpnestt(i,j,k) = tpp(i,j,k)
               hmnestt(i,j,k) = hmp(i,j,k)
            end do
         end do
      end do
      do n = 1, ntr
         do k=1,gnk
            do j=1-hy,ldnj+hy
               do i=1-hx,ldni+hx
                  clnestt(i,j,k,n) = clp(i,j,k,n)
               end do
            end do
         end do
      end do
      do j=1-hy,ldnj+hy
         do i=1-hx,ldni+hx
            qpnestt(i,j,0) = qpp(i,j,0)
         end do
      end do
*     
      if (myproc.eq.0) then
         write (6,602)
         call hpdeallc (patp1 ,err,1)
         call hpdeallc (path1 ,err,1)
      endif
*
 602  format (/' BUBBLE INITIALIZATION COMPLETED')
*---------------------------------------------------------------------
      return
      end



@
