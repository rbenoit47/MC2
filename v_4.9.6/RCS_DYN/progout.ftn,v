head	4.9;
access;
symbols;
locks; strict;
comment	@# @;


4.9
date	2003.06.09.13.08.55;	author armnmod;	state Exp;
branches;
next	;


desc
@@


4.9
log
@mc2_4.9
@
text
@copyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
**s/r progout
*
      subroutine progout (ng)
      implicit none
*
      integer ng
**
#include "levels.cdk"
#include "rec.cdk"
#include "cdate.cdk"
#include "yomdyn.cdk"
#include "yomdyn1.cdk"
#include "lcldim.cdk"
#include "vinterpo.cdk"
#include "sor.cdk"
*
      integer maxntr
      parameter (maxntr = 500)
      character*8 trname(maxntr),dumc
      integer i,j,k,ip1,ip2,ntr,nl,nkk,nklvl(3)
      integer fstfrm,fstecr,ier,flag,gnpself,err
      real intlev(nkout),hh0(ng,2),f(ng),smap(ng)
      real us (ng,gnk+1),vs (ng,gnk+1),qs (ng,gnk+1),
     $     sws(ng,gnk  ),tts(ng,gnk  ),hms(ng,gnk  ),
     $     prw(ng,gnk  ),prt(ng,gnk  ),prm(ng,gnk+1),
     $     hw (ng,gnk  ),ht (ng,gnk  ),hm (ng,gnk+1),
     $     tr1(ng,gnk  ),wke(ng+gnk+8)
      real, dimension (:,:,:), allocatable :: cl
      real dum
      data nklvl /3*1/
*
*----------------------------------------------------------------------
*
      read (23) ntr
      read (23) (trname(i),i=1,ntr)
      if (ntr.gt.0) allocate (cl(ng,gnk,ntr))
*
*     * read Coriolis factor and map scale factor
*
      call rd3dfld (f   ,tr1,23,ng,1,1,ng,1,1)
      call rd3dfld (smap,tr1,23,ng,1,1,ng,1,1)
*
      do i=1,ng
         smap(i) = sqrt(smap(i))
      end do
*
      if (gnstepno.eq.0) then
         do k=1,gnk
            wke(k)= zt(k)
         end do
         wke(gnk+1)= htop
         wke(gnk+2)= iscal(1)
         wke(gnk+3)= iscal(2)
         wke(gnk+4)= tzero_star
         wke(gnk+5)= ttop_star
         wke(gnk+6)= ntrop_star
         wke(gnk+7)= htrop_star
         wke(gnk+8)= nstrat_star
         err= fstecr(wke,dum,-32,24,0,0,0,gnk+8,1,1,0,0,0,'C',
     $                 'HT','THERMO_H','X',0,0,0,0,5,.false.)
      endif
*
 100  continue
      read (23,end=110,iostat=flag) ip2,gnstepno
      goto 115
 110  continue
      print*, ' END OF FILE REACHED (zmc2.prog)'
      goto 200
*
 115  continue
*
      if (flag.eq.0) then
         if (gnstepno.gt.gnstep2) goto 200
*
         call rd3dfld (hh0,tr1,23,ng,1,2,ng,1,2)
*
         call hauteur ( hw     ,zt ,hh0,htop,iscal,ng,1,gnk )
         call hauteur ( ht     ,ztr,hh0,htop,iscal,ng,1,gnk )
         call hauteur ( hm(1,2),zm ,hh0,htop,iscal,ng,1,gnk )
         do i=1,ng
            hm(i,1) = hh0(i,1)
         end do
*
         call readdyn (us(1,2),vs(1,2),sws,qs,tts,hms,cl,ng,gnk,ntr)
*
         if (gnstepno.lt.gnstep1) goto 100
*
         print '(/" PROG ",i3,"HR",10x,"TIME STEP NO: ",i5)',
     $                                         ip2,gnstepno
*
         if (gnpself.eq.1) then
            call convip (ip1,1.,3,1,dumc,.false.)
            call ecris2_fst (hh0     ,0.,'MX  ',ip1,ip2,0,1.0,ng,1,nklvl)
            call convip (ip1,2.,3,1,dumc,.false.)
            call ecris2_fst (hh0(1,2),0.,'MX  ',ip1,ip2,0,1.0,ng,1,nklvl)
         else
            call ecris2_fst (hh0     ,0.,'ME  ',0,ip2,0,1.0,ng,1,nklvl)
         endif
*
         call fullpr ( prw,prt,prm,qs,ht,hm,ng,gnk )
*
         if (levtyp.ne.'G') then
            call lev_out (intlev,nl,pres_o,prw,height_o,ng,gnk,nkout)
            nkk = nl
         else
            nl  = 0
            nkk = gnk
         endif
         
         print *, '------------------------------------------------'
*
         if (nkk.gt.0) call adjtblo (table_out,nkk,nvardyn)
*
*        Geopotential, Temperature and PNM.
*
         call ztetps (tts,hms,prw,prt,prm,hw,ht,hm,intlev,ng,gnk,nl,ip2)
*
*        Horizontal Winds and pressure (QX)
*
         call vents (us,vs,prm,qs,ht,hm,f,smap,intlev,ng,gnk+1,nl,ip2)
*
*        Humidity, Vertical motion and surface pressure (P0,PN)
*
         call eshrwp (sws,tts,hms,prw,prt,intlev,ng,gnk,nl,ip2)
*
*        Tracers
*
         call trsout (cl,prt,intlev,trname,maxntr,ip2,ng,gnk,nl,ntr)
*
         goto 100
*     
      endif
*
 200  continue
      if ((ntr.gt.0).and.(gnpself.eq.1)) then
         write (6,992) 
         write (6,993) (trname(k),k=1,ntr)
         print*
      endif   
 992  format (/,5x,'=====> AVAILABLE TRACERS FOR NEXT CASCADE:')
 993  format (5x,'=====> ',a)
*
      ier = fstfrm(24)
      close (23)
*
      if (ntr.gt.0) deallocate (cl)
      if (levtyp.eq.'H') then
         call hpdeallc (paposit ,err,1)
         call hpdeallc (pahuv   ,err,1)
         call hpdeallc (pahtt   ,err,1)
         call hpdeallc (pahww   ,err,1)
      endif
*----------------------------------------------------------------------
 101  format (/' PROG ',I3,'HR',10X,'TIME STEP NO: ',I5)
 990  format ( ' ------------------------------------------------'/
     $         ' MINIMUM PRESSURE FOUND:',f10.2,' Pa'/
     $         ' VERTICAL INTERPOLATION WILL BE PERFORMED'/
     $         ' ON THE FOLLOWING PRESSURE LEVELS:')
 991  format ( '             WARNING'/
     $         'THESE LEVELS WILL NOT BE PRODUCED'/
     $         '       (OVER THE MODEL LID)')
*
      return
      end
*
      subroutine readdyn ( us, vs, sws, qs, tts, hms, cl, ng, nk, ntr )
      implicit none
*
      integer ng,nk,ntr
      real us (ng,nk),  vs(ng,nk), sws(ng,nk  ), qs (ng,0:nk), 
     $     tts(ng,nk), hms(ng,nk), cl (ng,nk,ntr)
*
*----------------------------------------------------------------------
      read (23) us
      read (23) vs
      read (23) sws
      read (23) qs
      read (23) tts
      read (23) hms
      if (ntr.gt.0) read (23) cl
*
*----------------------------------------------------------------------
      return
      end
@
