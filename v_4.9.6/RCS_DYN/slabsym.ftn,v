head	4.9;
access;
symbols;
locks; strict;
comment	@# @;


4.9
date	2003.06.09.13.08.55;	author armnmod;	state Exp;
branches;
next	;


desc
@@


4.9
log
@mc2_4.9
@
text
@copyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
***s/r slabsym
*
      subroutine slabsym
      implicit none
*
*OBJECT
*
*METHOD
*
*EXTERNALS
*
*AUTHOR   Claude Girard
*
*HISTORY
*
**
#include "dynmem.cdk"
*
      integer i,j,k,n
*----------------------------------------------------------------------
*
* slab-symetry

      if(north.eq.1) then
         do k=1,gnk
            do j=1,hy+1
               do i=1-hx,ldni+hx
                   vp(i,ldnj-1+j,k)     =     vp(i,ldnj-1,k)
                   up(i,ldnj-1+j,k)     =     up(i,ldnj-1,k)
                  tpp(i,ldnj-1+j,k)     =    tpp(i,ldnj-1,k)
                  qpp(i,ldnj-1+j,k)     =    qpp(i,ldnj-1,k)
                  swp(i,ldnj-1+j,k)     =    swp(i,ldnj-1,k)
                  hmp(i,ldnj-1+j,k)     =    hmp(i,ldnj-1,k)
                  do n = 1, ntr
                    clp(i,ldnj-1+j,k,n) =    clp(i,ldnj-1,k,n)
                  enddo
               enddo
            enddo
         enddo
         do j=1,hy+1
            do i=1-hx,ldni+hx
               qpp(i,ldnj-1+j,0)    =    qpp(i,ldnj-1,0)
            enddo
         enddo
      endif
*
      if(south.eq.1) then
         do k=1,gnk
            do i=1-hx,ldni+hx
               vp(i,1,k)   =   vp(i,2,k)
            enddo
            do j=1,hy
               do i=1-hx,ldni+hx
                   vp(i,1-j,k)   =    vp(i,1,k)
                   up(i,1-j,k)   =    up(i,1,k)
                  tpp(i,1-j,k)   =   tpp(i,1,k)
                  qpp(i,1-j,k)   =   qpp(i,1,k)
                  swp(i,1-j,k)   =   swp(i,1,k)
                  hmp(i,1-j,k)   =   hmp(i,1,k)
                  do n = 1, ntr
                    clp(i,1-j,k,n) = clp(i,1,k,n)
                  enddo
               enddo
            enddo
         enddo
         do j=1,hy
            do i=1-hx,ldni+hx
               qpp(i,1-j,0)   =   qpp(i,1,0)
            enddo
         enddo
      endif
*
*----------------------------------------------------------------------
      return
      end
@
