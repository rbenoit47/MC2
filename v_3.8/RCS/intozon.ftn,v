head	3.9;
access;
symbols;
locks; strict;
comment	@# @;


3.9
date	2003.06.16.18.50.49;	author armnphy;	state Exp;
branches;
next	3.8;

3.8
date	2003.03.12.15.49.43;	author armnbil;	state Exp;
branches;
next	;


desc
@@


3.9
log
@La version 3.9 de la physique a ete creee le 16 juin 2003.

Elle constitue la premiere version de conversion vers le
calculateur IBM.

Le nouveau code de "gravity wave drag" sgoflx3.ftn est une
copie du code linearise lin_sgoflx1.ftn.
@
text
@!copyright (C) 2001  MSC-RPN COMM  %%%RPNPHY%%%
***s/p intozon
*
      subroutine intozon (jour,mois,prout)
*
#include "impnone.cdk"
*
      logical prout
      integer jour,mois
*
*Author
*          B. Dugas (Winter 2001) - From litozon2
*
*Revision
*
*Object
*          produces a new ozone field valid at jour/mois from
*          the previously read climatology table gozon12.
*          Allows bit-reproducibility for time integrations
*          running a multiple of 1 day per "clone".
*
*Arguments
*
*          - Input -
* mois     month of ozone record
* jour     day of the month 
*
*Notes
*          Monthly climatological values are supposed to be valid
*          on the 15th. No interpolation is needed (done) when
*          the input jour is 15
*
**
*
#include "radparam.cdk"
#include "ozopnt.cdk"
#include "raddata.cdk"
*
      real      total,ecoule
      integer   basem,destm,courm
      integer   i,J,K,NLP,annee(12)
*
      DATA annee / 31,28,31,30,31,30,31,31,30,31,30,31 /
*
      NLP=NLACL*NPCL
*
*     doit-on interpoler ?
      if (jour.lt.15) then
         if (mois.eq.1) then
            destm = 1
            basem = 12
         else
            destm = mois
            basem = destm-1
         endif
         ecoule   = jour+annee(basem)-15
      else if (jour.gt.15) then
         if (mois.eq.12) then
            basem = 12
            destm = 1
         else
            basem = mois
            destm = basem+1
         endif
         ecoule   = jour-15
      else
         basem    = mois
         destm    = basem
      endif
*
      if (destm.ne.basem) then
*
         total = 1./annee(basem)

*        interpoler pour le jour courant.
         DO J=1,NLP
            goz(J) =  gozon12(J,basem) + 
     $               (gozon12(J,destm)-gozon12(J,basem))*total*ecoule
         ENDDO
*
      else
*
         DO J=1,NLP
            goz(J)= gozon12(J,destm)
         ENDDO
*
      endif
*
      if (prout) write(6,1120) jour,mois
*
      RETURN
 1120 FORMAT(/' INTOZON: OZONE INTERPOLATED TO DAY ',I2,', MONTH ',I2)
      END
*
@


3.8
log
@description_r3.8
@
text
@@
