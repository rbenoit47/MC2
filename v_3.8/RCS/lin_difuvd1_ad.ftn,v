head	3.9;
access;
symbols;
locks; strict;
comment	@# @;


3.9
date	2003.06.16.18.50.49;	author armnphy;	state Exp;
branches;
next	3.8;

3.8
date	2003.03.12.15.49.43;	author armnbil;	state Exp;
branches;
next	;


desc
@@


3.9
log
@La version 3.9 de la physique a ete creee le 16 juin 2003.

Elle constitue la premiere version de conversion vers le
calculateur IBM.

Le nouveau code de "gravity wave drag" sgoflx3.ftn est une
copie du code linearise lin_sgoflx1.ftn.
@
text
@!copyright (C) 2001  MSC-RPN COMM  %%%RPNPHY%%%
***S/P LIN_DIFUVD1_AD ADJ of LIN_DIFUVD1
*
      SUBROUTINE LIN_DIFUVD1_AD (E, SC, A, B, C, U, D, N, NK,
     &                           A5, B5, C5, U5)
*

      IMPLICIT NONE
      INTEGER N, NK
      REAL E(N, NK), A(N, NK), B(N, NK), C(N, NK), U(N, NK), D(N, NK)
      REAL A5(N, NK), B5(N, NK), C5(N, NK), U5(N, NK)
      REAL SC
*
*Author
*          S. Laroche (oct 2000)
*
*Object
*          adjoint of  E=SC*(A,B,C)*U + D
*
*Arguments
*
**
*
      INTEGER K, I
*
      DO K=NK,1,-1

         IF (K.LT.NK) THEN
         DO I=N,1,-1
          U(I,K+1) = SC*C5(I,K)*E(I,K)   + U(I,K+1)
          C(I,K)   = SC*E(I,K)*U5(I,K+1) + C(I,K)
         ENDDO
         ENDIF
         IF (K.GT.1) THEN
         DO I=N,1,-1
          U(I,K-1) = SC*A5(I,K)*E(I,K)   + U(I,K-1)
          A(I,K)   = SC*E(I,K)*U5(I,K-1) + A(I,K)
         ENDDO
         ENDIF
         DO I=N,1,-1
          U(I,K)   = SC*B5(I,K)*E(I,K) + U(I,K)
          B(I,K)   = SC*E(I,K)*U5(I,K) + B(I,K)
          D(I,K)   = E(I,K)            + D(I,K)
          E(I,K)   = 0.0
         ENDDO

      ENDDO
 
      RETURN
      END
@


3.8
log
@description_r3.8
@
text
@@
