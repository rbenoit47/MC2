head	3.9;
access;
symbols;
locks; strict;
comment	@# @;


3.9
date	2003.06.16.18.51.11;	author armnphy;	state Exp;
branches;
next	3.8;

3.8
date	2003.03.12.15.49.43;	author armnbil;	state Exp;
branches;
next	;


desc
@@


3.9
log
@La version 3.9 de la physique a ete creee le 16 juin 2003.

Elle constitue la premiere version de conversion vers le
calculateur IBM.

Le nouveau code de "gravity wave drag" sgoflx3.ftn est une
copie du code linearise lin_sgoflx1.ftn.
@
text
@***S/R MFOQSA  -  CALCULE HUM SP SATURANTE,(EAU SEULEMENT)
*
#include "phy_macros_f.h"
      SUBROUTINE MFOQSA(QS,TT,PX,LNPS,MODP,NI,NK,N)
*
#include "impnone.cdk"
*
      INTEGER NI, NK, N, MODP
      REAL QS(NI,NK), TT(NI,NK)
      REAL PX(*), LNPS(NI,*)
      REAL TEMP1
*
*Author
*          N. Brunet  (Jan91)
*
*Revision
* 001      B. Bilodeau  (August 1991)- Adaptation to UNIX
* 002      B. Bilodeau (January 2001) - Automatic arrays
* 003      G. Pellerin (Mai 03) - IBM conversion
*                  - calls to vexp routine (from massvp4 library)
*
*Object
*          to calculate saturation specific humidity (water phase
*          considered only for all temperatures)
*
*Arguments
*
*          - Output -
* QS       saturated specific humidity in kg/kg
*
*          - Input -
* TT       temperature in Kelvins
* PX       see MODP
* LNPS     see MODP
* MODP     pressure mode (SI units only):
*          =0; pressure level in PX
*          =1; sigma level in PX and PS(surface pressure) in LNPS
*          =2; sigma level in PX and logarithm of sigma level in
*          LNPS
*          =3; all points of pressure in LNPS(NI,*) in Pascals
*          =4; sigma level in PX and logarithm of sigma level in
*          LNPS(in millibars unless using SI units)
*          =5; logarithm of pressure level in PX(in millibars unless
*          using SI units)
* NI       horizontal dimension
* NK       vertical dimension
* N        number of points to process
*
*
*IMPLICITES
#include "consphy.cdk"
*MODULES
      EXTERNAL INCTPHY
*
**
*--------------------------------------------------------------------
      INTEGER K, I
      REAL*8 DEPS1,DEPS2,DTRPL,DTEMP
*
************************************************************************
*     AUTOMATIC ARRAYS
************************************************************************
*
      AUTOMATIC ( PN , REAL   , (N     ) )
      AUTOMATIC ( XT , REAL*8 , (NI, NK) )
*
************************************************************************
*
c     FONCTION DE VAPEUR SATURANTE (TETENS)
c     FOEWA(TTT) = 610.78D0*DEXP(17.269D0*(DBLE(TTT)-DBLE(TRPL))/
c    W (DBLE(TTT)-35.86D0))
c
c     FOQSA(TTT,PRS) = DBLE(EPS1)/(DMAX1(1.D0,DBLE(PRS)/FOEWA(TTT))-
c    W DBLE(EPS2))
*
*--------------------------------------------------------------------
#include "initcph.cdk"
*
      DTRPL=DBLE(TRPL)
      DEPS1=DBLE(EPS1)
      DEPS2=DBLE(EPS2)
*
      DO K=1,NK
         DO I=1,NI
         DTEMP=DBLE(TT(I,K))
         XT(I,K)=(17.269D0*DTEMP-DTRPL)/(DTEMP-35.86D0)
         ENDDO
      ENDDO
*
      CALL VEXP(XT,XT,NI*NK)

      DO 10 K=1,NK
*
#include "modpr2.cdk"
*
      DO 15 I=1,N
         DTEMP = DBLE(PN(I))
         QS(I,K) = DEPS1/(DMAX1(1.0D0,DTEMP/
     *                    (610.78D0*XT(I,K)))-DEPS2) 
15    CONTINUE
10    CONTINUE
*
*
      RETURN
      END
@


3.8
log
@description_r3.8
@
text
@a0 1
!copyright (C) 2001  MSC-RPN COMM  %%%RPNPHY%%%
d10 1
a10 1
      REAL PX(NK), LNPS(NI,*)
d19 2
d58 1
d64 2
a65 1
      AUTOMATIC ( PN , REAL , (N) )
d69 7
a75 2
#include "dintern.cdk"
#include "fintern.cdk"
d79 10
a88 1
*
d90 2
d97 3
a99 2
         TEMP1 = PN(I)
         QS(I,K) = FOQSA(TT(I,K),TEMP1)
@
