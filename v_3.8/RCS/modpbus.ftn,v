head	3.9;
access;
symbols;
locks; strict;
comment	@# @;


3.9
date	2003.06.16.18.51.11;	author armnphy;	state Exp;
branches;
next	3.8;

3.8
date	2003.03.12.15.49.43;	author armnbil;	state Exp;
branches;
next	;


desc
@@


3.9
log
@La version 3.9 de la physique a ete creee le 16 juin 2003.

Elle constitue la premiere version de conversion vers le
calculateur IBM.

Le nouveau code de "gravity wave drag" sgoflx3.ftn est une
copie du code linearise lin_sgoflx1.ftn.
@
text
@!copyright (C) 2001  MSC-RPN COMM  %%%RPNPHY%%%
***s/r modpbus - Modify the physics pointers
*
      subroutine modpbus ( F_ni_in, F_ni_out )
*
#include "impnone.cdk"
*
      integer F_ni_in,F_ni_out
*
*author
*     Bernard Dugas - RPN - august 2002
*
*revision
* v3_72 - Dugas B.          - initial version
*
*object
*     Modifies all of the active pointers used by the physics
*     to account for the changing first dimensions produced
*     when the dynamics does more than one call to phyexe1
*     for each slab (GEM option P_pset_second_L=.true.),
*
*Input Arguments
* F_ni_in  First dimension at entry
* F_ni_out First dimension at exit
*
*----------------------------------------------------------------
*
*implicits
#include "phy_macros_f.h"
#include "phybus.cdk"
*
#include "nbvarsurf.cdk"
#include "dimsurf.cdk"
*
*modules
*
      integer position(0:1),i
      equivalence (phybus_i_first(0),position(0))
*
      logical do_it_L
      integer nvarphy
      save    nvarphy,do_it_L
*
      data do_it_L / .true. /
*     ---------------------------------------------------------------
*
      if (do_it_L) then
         nvarphy = COMPHY_SIZE(phybus)
         do_it_L = .false.
      end if
*
*C    modify the phybus pointeurs (defined initially in phy_ini)
*
      do i=1,nvarphy
         position(i) = (((position(i) - 1) / F_ni_in) * F_ni_out) + 1
      end do
*
*C    modify the sfcbus pointers (defined initially in iniptsurf)
*
      do i=1,nvarsurf
         if (ptdebut(i).ne.0) then
            ptdebut(i) = (((ptdebut(i) - 1) / F_ni_in) * F_ni_out) + 1
         endif
      end do
*
      return
      end



@


3.8
log
@description_r3.8
@
text
@@
