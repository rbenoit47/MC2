head	3.9;
access;
symbols;
locks; strict;
comment	@# @;


3.9
date	2003.06.16.18.49.37;	author armnphy;	state Exp;
branches;
next	3.8;

3.8
date	2003.03.12.15.49.43;	author armnbil;	state Exp;
branches;
next	;


desc
@@


3.9
log
@La version 3.9 de la physique a ete creee le 16 juin 2003.

Elle constitue la premiere version de conversion vers le
calculateur IBM.

Le nouveau code de "gravity wave drag" sgoflx3.ftn est une
copie du code linearise lin_sgoflx1.ftn.
@
text
@!copyright (C) 2001  MSC-RPN COMM  %%%RPNPHY%%%
***S/P  CONRES1
*
#include "phy_macros_f.h"
      SUBROUTINE CONRES1(RI,GAMA,GAMAQ,FN,T,TVE,Q,QE,PS,HOL,SIGMA,SE,S,
     %                      QC,N,M,NK)
#include "impnone.cdk"
*
      INTEGER N,M,NK,j,k
*
      REAL RI(N,NK),GAMA(N,NK),GAMAQ(N,NK),FN(N,NK)
      REAL T(M,NK),TVE(N,NK),Q(M,NK),QE(N,NK)
      REAL PS(N),HOL(N)
      REAL SIGMA(n,NK),SE(n,NK),S(N,NK)
      REAL QC(N)
*
      INTEGER MODP
*
      REAL X,TVK,TVN,TVBAR,GAMAA,GAMAV,GAMAVS,FAC,DZ,DLNP
      REAL BETA,GAMAS,AA,RGASD_OV_GRAV,GRAV_OV_CPD
************************************************************************
*     AUTOMATIC ARRAYS
************************************************************************
*
      AUTOMATIC (WORK,REAL   , (N,NK))
      AUTOMATIC (TE  ,REAL   , (N,NK))
      AUTOMATIC (QSAT,REAL   , (N,NK))
      AUTOMATIC (PRES,REAL   , (N,NK))
*
*Author
*        C .Girard RPN March 1993
*
*Revisions
* 001    R. Benoit (August 93) - Local sigma (Sigma, SE (2D))
* 002    C .Girard (March 96) - Clean-up and New shallow convection
* 003    M. Lepine (March 2003) -  CVMG... Replacements
* 004    A. Plante (May 2003) - IBM conversion
*           - replace CVMG* by if/else statements
*           - calls to vslog routine (from massvp4 library)
*           - calls to optimized routin mfoqst
*           - constantes precomputations
*
*Object
*        Parameterization of certain effects of shallow convection:
*        -Estimate a convective cloud fraction which will interact
*         with radiation schemes
*        -Modify the stability through Ri for all diffused variables
*         including wind
*        -Modify the equilibrium gradients of temperature and moisture
*
*
*Arguments
*
*          -Input/Output-
* RI       nombre de Richardson
* GAMA     Gradient at equilibrium for temperature
* GAMAQ    Gradient at equilibrium for moisture
* FN       Cloud fraction related to shallow convection
*
*          -Input-
* T        Temperature (M,NK)
* TVE      Virtual Temperature at level 'E' (N,NK)
* Q        Specific humidity(M,NK)
* QE       Specific humidity at level 'E' (N,NK)
* PS       surface pressure (N)
* HOL      Indicator of stability in the boundary layer (N)
*                 (Unstable when negative)
* SIGMA    Sigma level (n,NK)
* SE       Sigma level for 'E' (n,NK)
* N        Horizontal dimension
* M        1st dimension of T and Q in the calling program
* NK       vertical dimension
*
*          -Work-
* QC       specific humidity of cloud (N)
*
**
*
*
#
#include "consphy.cdk"
#include "dintern.cdk"
#include "fintern.cdk"
*
      RGASD_OV_GRAV=RGASD/GRAV
      GRAV_OV_CPD=GRAV/CPD
*
      DO j=1,N
*
*           POSSIBILITE DE PRESENCE D'UN NUAGE CONVECTIF:
*             QC=QNK    -AU-DESSUS D'UNE COUCHE LIMITE INSTABLE
*
         if (-HOL(j) .ge. 0.) then
            QC(j) = Q(j,NK)
         else
            QC(j) = 0.
         endif
*
      END DO
*
*     Precomputations for optimisation on IBM
      DO k=1,NK
         DO j=1,N
            WORK(j,k)=SIGMA(j,NK)/SIGMA(j,k)
            TE(j,k)=FOTTV(TVE(j,k),QE(j,k))
            PRES(j,k)=SE(j,k)*PS(j)
         END DO
      END DO
      call vslog(WORK,WORK,N*NK)
*
      MODP=3
*     NOTE : SE IS NOT USED IN MODE MODP=3.
      CALL MFOQST(QSAT,TE,SE,PRES,MODP,N,NK,N)
*
      DO k=NK-1,2,-1
         DO j=1,N
*
*           CALCUL DE TVK, TVN ET TVBAR
*
            TVK = FOTVT(T(j,k),Q(j,k))
            TVN = FOTVT(T(j,NK),Q(j,NK))
            TVBAR = 0.5*(TVK+TVN)
*
*           CALCUL APPROX. DE GAMAV
*
            DZ = RGASD_OV_GRAV*TVBAR*WORK(J,K)
            GAMAV = (TVK-TVN)/DZ + GRAV_OV_CPD
*
*           CALCUL APPROX. DE GAMAVS
*
            BETA=1.35E7*QSAT(j,k)/(TE(j,k)*TVE(j,k))
            GAMAS=GRAV_OV_CPD*(1.-6.46E-4*TE(j,k))*BETA/(1.+BETA)
*
            GAMAVS=(TVE(j,k)/TE(j,k))*GAMAS
*
*           CALCUL DU RAPPORT: -GAMAV/GAMAVS
*
            X = - GAMAV/GAMAVS
*
*           DOIT ETRE ENTRE -1. ET 0.
*
            X = MAX(-1.,MIN(0.,X))
*
*           CALCUL DE LA FRACTION NUAGEUSE: FN
*            (variante de la formule de Bjerknes)
*
            FN(j,k) = (1+X)/(2+X)
*
*           QC S'EVANOUIT LORSQUE FN=0
*
            if (FN(j,k) .eq. 0.)then
               QC(j) = 0.
            endif
*
*           FN S'EVANOUIT A SON TOUR SI QC.LT.QSAT
*
            if (QC(j).LT.QSAT(j,k))then
               FN(j,k) = 0.
            endif
*
*           CALCUL DE GAMA = AA x GAMAS
*
            AA=SQRT(FN(j,k))
            GAMAA=AA*GAMAS
*
*           MODIFICATION DE RI
*
            FAC = GRAV / ( TE(j,k) * S(j,k) )
            RI(j,k) =  RI(j,k) - FAC * GAMAA
*
            GAMA(j,k) = GAMA(j,k) + GAMAA
*
            GAMAQ(j,k) = GAMAQ(j,k)
*
         END DO
      END DO
*
      RETURN
      END
@


3.8
log
@description_r3.8
@
text
@d4 1
d17 2
d20 9
a28 1
      REAL BETA,GAMAS,TE,QSAT,AA
d36 6
a79 3
#if defined (CVMG)
#include "cvmg.cdk"
#endif
d85 2
d93 7
a99 1
         QC(j) = CVMGP(Q(j,NK),0.,-HOL(j))
d101 7
d109 5
a122 1
            TE=FOTTV(TVE(j,k),QE(j,k))
d126 2
a127 3
            DLNP = ALOG(SIGMA(j,NK)/SIGMA(j,k))
            DZ = (RGASD/GRAV)*TVBAR*DLNP
            GAMAV = (TVK-TVN)/DZ + GRAV/CPD
d131 2
a132 3
            QSAT=FOQST(TE,SE(j,k)*PS(j))
            BETA=1.35E7*QSAT/(TE*TVE(j,k))
            GAMAS=(GRAV/CPD)*(1.-6.46E-4*TE)*BETA/(1.+BETA)
d134 1
a134 1
            GAMAVS=(TVE(j,k)/TE)*GAMAS
d151 3
a153 1
            QC(j) = CVMGZ(0.,QC(j),FN(j,k))
d157 3
a159 1
            FN(j,k) = CVMGT(0.,FN(j,k),QC(j).LT.QSAT)
d168 1
a168 1
            FAC = GRAV / ( TE * S(j,k) )
@
