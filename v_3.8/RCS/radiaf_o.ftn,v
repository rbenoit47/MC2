head	3.9;
access;
symbols;
locks; strict;
comment	@# @;


3.9
date	2003.06.16.18.51.11;	author armnphy;	state Exp;
branches;
next	3.8;

3.8
date	2003.03.12.15.49.43;	author armnbil;	state Exp;
branches;
next	;


desc
@@


3.9
log
@La version 3.9 de la physique a ete creee le 16 juin 2003.

Elle constitue la premiere version de conversion vers le
calculateur IBM.

Le nouveau code de "gravity wave drag" sgoflx3.ftn est une
copie du code linearise lin_sgoflx1.ftn.
@
text
@!copyright (C) 2001  MSC-RPN COMM  %%%RPNPHY%%%
***s/r radiaf_o  -- Initialisation of climatological ozone data
*                   and radiation table
*
      subroutine radiaf_o (fichier, chemin, cible, n, flag)
#include "impnone.cdk"
*
      character* (*) fichier, chemin
      logical flag
      integer n
      real cible (n)
*
*Author
*          M. Desgagne (Oct 1998)
*
*Revision
*001       B. Bilodeau (Sept 1999) - Eliminate unit 26. 
*          Use FNOM instead of OPEN. Change name from 
*          radfile to radiaf_o.
*
*Object
*          Default file manager for the physics radiation package.
*
*Arguments
*          - Input -
* fichier  name of the file to manage
*          - Input/Output -
* chemin   possible path to find fichier
*          - Output -
* cible    reception adresss for the data to be read
*          - Input -
* n        dimension of cible
* flag     logical flag to indicate ozone (.t.) or radiation table (.f.)
*
***
*
      character*26 datatype(2)
      logical ielocal,iela,isfst
      integer iun,ilir,inbr,indice,long,status,ityp
      integer fnom,fstouv,fstopc,fstfrm,fclos,fstnbr
      data datatype /'CLIMATOLOGICAL OZONE FILE ',
     $               'RADIATION TABLE FILE '/
*-----------------------------------------------------------------
*
      iun    = 0
      inbr   = fstopc ('MSGLVL','SYSTEM',.false.)
      status = -1
      ityp = 1
      if (.not.flag) ityp=2
*
*
      inquire (FILE=fichier,EXIST=ielocal)
      if (ielocal) then
         chemin = fichier
         iela   = .true.
         indice = 0
         long   = len (fichier)
      else
         indice = index(chemin,' ')
         long   = len(fichier)
         chemin(indice:indice+long-1) = fichier
         inquire (FILE=chemin,EXIST=iela)
      endif
*
      if (iela) then
         ilir   = fnom (iun,chemin,'STD+RND+OLD',0)
         ilir   = FSTNBR(iun)
         if (ilir.ge.0) then
            ilir  = fstouv (iun,'RND')
            isfst = .true.
         else
            inbr = fclos (iun)
            iun = 0
            ilir = fnom (iun,chemin,'SEQ+FTN+UNF',0)
            isfst = .false.
         endif
*
         print*
         if (isfst) then
            print *, datatype(ityp),'(FST): ',chemin(1:indice+long)
            inbr   = fstopc ('MSGLVL','INFORM',.false.)
         else
            print *, datatype(ityp),'(SEQ): ',chemin(1:indice+long)
         endif
*
         call rdradf (cible,iun,isfst,n,flag,status)
*
         if (isfst) then            
            inbr = fstfrm (iun)
         endif
*
         inbr = fclos  (iun)    
*
      else
*
         print*
         print *,'********************************************'
         print *,'   CAN NOT FIND ',datatype(ityp)
         print *,'********************************************'
*
      endif
*  
*-----------------------------------------------------------------
*
      return
      end
@


3.8
log
@description_r3.8
@
text
@@
