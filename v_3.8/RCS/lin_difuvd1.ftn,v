head	3.9;
access;
symbols;
locks; strict;
comment	@# @;


3.9
date	2003.06.16.18.50.49;	author armnphy;	state Exp;
branches;
next	3.8;

3.8
date	2003.03.12.15.49.43;	author armnbil;	state Exp;
branches;
next	;


desc
@@


3.9
log
@La version 3.9 de la physique a ete creee le 16 juin 2003.

Elle constitue la premiere version de conversion vers le
calculateur IBM.

Le nouveau code de "gravity wave drag" sgoflx3.ftn est une
copie du code linearise lin_sgoflx1.ftn.
@
text
@!copyright (C) 2001  MSC-RPN COMM  %%%RPNPHY%%%
***S/P LIN_DIFUVD1
*
      SUBROUTINE LIN_DIFUVD1 (E, SC, A, B, C, U, D, N, NK)
*
      IMPLICIT NONE
      INTEGER N, NK
      REAL E(N, NK), A(N, NK), B(N, NK), C(N, NK), U(N, NK), D(N, NK)
      REAL SC
*
*
*Author
*          S. Laroche (oct 2000)
*
*Object
*          to produce the tri-diagonal: E=SC*(A,B,C)*U + D
*          (originally from DIFUVD1, R. Benoit)
*Arguments
*
*          - Output -
* E        result of (product +D)
*
*          - Input -
* SC       factor of the operator
* A        lower-diagonal
* B        diagonal
* C        upper-diagonal
* U        vector to multiply on matrix(A,B,C)
* D        inhomogeneous term to add
* N        1st dimension (for all except for U)
* NK       second dimension
*
***
      INTEGER K, I
*
      DO K=1,NK
*     FAIRE D'ABORD TERME DIAGONAL ET AJOUT DU TERME D DANS ACCUMULATEUR
         DO I=1,N
            E(I,K)=D(I,K)+SC*B(I,K)*U(I,K)
         ENDDO
         IF (K.GT.1) THEN
            DO I=1,N
               E(I,K)=E(I,K)+SC*A(I,K)*U(I,K-1)
            ENDDO
         ENDIF
         IF (K.LT.NK) THEN
            DO I=1,N
               E(I,K)=E(I,K)+SC*C(I,K)*U(I,K+1)
            ENDDO
         ENDIF
      ENDDO
*
      RETURN
      END
@


3.8
log
@description_r3.8
@
text
@@
